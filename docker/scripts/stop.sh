#!/bin/bash

# DÃ©finition des couleurs pour les messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher un message d'information
info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# Fonction pour afficher un message de succÃ¨s
success() {
    echo -e "${GREEN}[SUCCÃˆS]${NC} $1"
}

# Fonction pour afficher un avertissement
warning() {
    echo -e "${YELLOW}[ATTENTION]${NC} $1"
}

# Fonction pour afficher une erreur
error() {
    echo -e "${RED}[ERREUR]${NC} $1"
}

# VÃ©rifier si Docker est en cours d'exÃ©cution
if ! docker info > /dev/null 2>&1; then
    warning "Docker n'est pas en cours d'exÃ©cution. Aucun conteneur Ã  arrÃªter."
    exit 0
fi

info "ğŸ›‘ ArrÃªt de l'environnement de dÃ©veloppement..."

# ArrÃªter les conteneurs
info "ArrÃªt des conteneurs Docker en cours..."
if docker-compose down; then
    success "Les conteneurs ont Ã©tÃ© arrÃªtÃ©s avec succÃ¨s."
else
    error "Erreur lors de l'arrÃªt des conteneurs."
    exit 1
fi

# Nettoyer les ressources inutilisÃ©es
info "Nettoyage des ressources Docker inutilisÃ©es..."
docker system prune -f

# VÃ©rifier s'il reste des conteneurs en cours d'exÃ©cution
if [ "$(docker ps -q)" ]; then
    warning "Certains conteneurs sont toujours en cours d'exÃ©cution :"
    docker ps
    
    echo ""
    read -p "Voulez-vous forcer l'arrÃªt de tous les conteneurs ? (o/N) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[OoYy]$ ]]; then
        info "ArrÃªt forcÃ© de tous les conteneurs en cours d'exÃ©cution..."
        docker stop $(docker ps -q)
        success "Tous les conteneurs ont Ã©tÃ© arrÃªtÃ©s."
    fi
fi

# VÃ©rifier les volumes orphelins
VOLUMES=$(docker volume ls -qf dangling=true)
if [ ! -z "$VOLUMES" ]; then
    info "Nettoyage des volumes orphelins..."
    docker volume rm $VOLUMES 2>/dev/null || true
fi

# VÃ©rifier les rÃ©seaux orphelins
NETWORKS=$(docker network ls --filter 'name=app_*' -q)
if [ ! -z "$NETWORKS" ]; then
    info "Suppression des rÃ©seaux inutilisÃ©s..."
    docker network rm $NETWORKS 2>/dev/null || true
fi

success "âœ… L'environnement a Ã©tÃ© arrÃªtÃ© et nettoyÃ© avec succÃ¨s !"

# Afficher l'utilisation des ressources systÃ¨me
info "Utilisation actuelle des ressources Docker :"
docker system df

exit 0
