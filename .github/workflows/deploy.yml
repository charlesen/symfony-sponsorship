name: Deploy to Production

on:
  push:
    branches: [ main ]  # Ne se déclenche que sur la branche main
  workflow_dispatch:  # Permet un déclenchement manuel

jobs:
  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    
    # Vérifie que le workflow CI a réussi (si déclenché par un push)
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Verify branch
        run: |
          echo "Déploiement depuis la branche: ${{ github.ref_name }}"
          if [ "${{ github.ref_name }}" != "main" ]; then
            echo "Erreur: Le déploiement n'est autorisé que depuis la branche main"
            exit 1
          fi
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: composer:v2
      
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          
          # Ajouter la clé à l'agent SSH
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
          
          # Configurer Git pour utiliser SSH
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Install Deployer
        run: |
          curl -LO https://deployer.org/deployer.phar
          mv deployer.phar /usr/local/bin/dep
          chmod +x /usr/local/bin/dep
          dep --version
      
      - name: Verify server connection
        run: |
          ssh -o BatchMode=yes -o ConnectTimeout=5 ${{ secrets.SSH_PRIVATE_KEY_USER }}@${{ secrets.SSH_HOST }} echo "Connexion SSH réussie"
      
      - name: Deploy with Deployer
        env:
          APP_ENV: prod
          APP_DEBUG: 0
          # Passer les variables d'environnement nécessaires
          DEPLOYER_DOTENV: 0
        run: |
          # Exécution du déploiement avec plus de verbosité
          dep -vvv deploy production --tag=${{ github.sha }}
      
      - name: Verify deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_PRIVATE_KEY_USER }}@${{ secrets.SSH_HOST }} "
            cd /var/www/symfony-sponsorship/current && \
            echo -n 'Version déployée: ' && \
            git describe --tags || echo 'Aucun tag trouvé'"
      
      # Désactiver la notification Slack si non configurée
      - name: Notify deployment status
        if: success() && github.event_name != 'workflow_dispatch' && contains(github.event.pull_request.labels.*.name, 'deploy')
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL || '' }}
          SLACK_TITLE: "Déploiement de l'application"
          SLACK_MESSAGE: "Déploiement vers la production ${{ job.status }} pour le commit ${{ github.sha }}"
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
